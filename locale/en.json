{
  "localeCode": "en",
  "localeName": "English",
  "version": "2.0.0",
  "header": {
    "tab": {
      "tab1": "Services",
      "tab2": "operation",
      "tab3": "Release package",
      "tab4": "cache configuration",
      "tab5": "operation manage"
    },
    "dcache": {
      "tab2": "Create Service"
    },
    "logout": "Logout",
    "modifyPass": "Modify Password",
    "userCenter": "User Center"
  },
  "deployLog": {
    "log": "Deploy tarslog first",
    "installNode": "Please install TarsNode first",
    "failed:": "Server deploy failed",
    "sameWithRegistry": "Can not deploy tarslog in same machine with tars framework",
    "info":"Please deploy tarslog in machine(not tars framework machine)",
    "install": "Deploy"
  },
  "releasePackage": {
    "proxyList": "Proxy Service List",
    "accessList": "DbAccess Service List",
    "routerList": "Router Service List",
    "cacheList": "Cache Service List",
    "uploadPackage": "Upload publish package",
    "moduleName": "moduleName",
    "uploadTime": "upload time",
    "default": "default",
    "confirmDeleteTip": "Are you sure you want to delete this release package?",
    "cacheType": "cache type"
  },
  "task": {
    "params": "parameters error",
    "serverLimit": "tars server must keep one at least",
    "framework": "servers deploy in tars framework can not be undeployed"
  },
  "api": {
    "blank": {
      "error": {
        "message": "blank error message"
      },
      "template": {
        "id": "blank template id",
        "name": "blank template name"
      },
      "parent": {
        "template": {
          "name": "blank parent template name"
        }
      }
    },
    "create": {
      "config": {
        "file": "create configuration file"
      }
    },
    "config": {
      "file": {
        "being": {
          "referred": "configuration file being referred"
        }
      }
    },
    "cant": {
      "delete": {
        "or": {
          "update": "can't delete/update"
        }
      },
      "update": "can't update"
    },
    "nonexistent": {
      "template": "nonexistent template",
      "parent": {
        "template": "nonexistent parent template"
      },
      "multipart": "can't find out upload data"
    },
    "template": {
      "being": {
        "referred": "template being referred"
      }
    },
    "expand": {
      "node": {
        "status": {
          "existent": "existent",
          "nonexistent": "no expand"
        }
      }
    },
    "parameter": {
      "blank": "parameter {0} is blank",
      "invalid": "invalid parameter {0} value"
    },
    "execute": {
      "package": {
        "script": {
          "error": "execute package command error"
        }
      }
    },
    "resource": {
      "tarsNodeExist": "Tars Node is already exist",
      "downloadFail": "download tarsnode.tgz package failed",
      "registryAddressIsEmpty": "registry address is empty",
      "machineIpIsEmpty": "machine ip is empty",
      "installFailed": "Install Tars Node failed",
      "uninstallFailed": "Uninstall Tars Node failed",
      "notConfig": "No machine configuration was found",
      "serverExist": "There is a service on the machine that does not allow uninstall the tars node",
      "sshFailed": "SSH link failed",
      "installSuccess": "Install Tars Node successfully",
      "uninstallSuccess": "Uninstall Tars Node successfully"
    }
  },
  "apply": {
    "title": "Application",
        "createTitle": "Create Application",
    "name": "Application Name",
    "createApply": "Create Application",
    "createRouterProxyService": "Create Router、proxy Service",
    "createRegionTips": "Before creating the application, create the locale",
    "uploadPatchPackage": "Before creating the application, please upload the proxy, router, and dcache publishing packages and set the default Settings",
    "hasExist": "Application already exists",
    "RouterConfigInfo": "Router configuration information",
    "ProxyConfigInfo": "Proxy configuration information",
    "install": "Installation",
    "publish": "Release",
    "installAndPublish": "Install And Publish",
    "ProxyManage": "The Proxy Management",
    "RouterManage": "The Router Management",
    "CacheManage": "The Cache Management",
    "noDefaultProxyPackage": "There is no default Proxy distribution package",
    "noDefaultRouterPackage": "There is no default Router distribution package",
    "duplicateIp": "Duplicate service IP is not allowed, please input correct service IP",
    "routerIp": "Router IP can not be empty",
    "proxyIp": "Proxy IP can not be empty",
    "dbAccessIp": "DbAccess IP can not be empty",
    "dbMethod": "Please choose router database"
  },
  "module": {
    "title": "Module",
        "createTitle": "Create Module",
        "update": "Module already exists, please select update mode",
    "name": "Module Name",
        "chooseMirror": "Please choose one mirror at least",
    "namingRule": "Application name + custom name.Only digits and letters allowed.",
    "keyType": "Key Type",
    "createModule": "Create Module",
    "createModuleService": "Creating Module Services",
    "moduleConfig": "Module Configuration",
    "scenario": "Application Scenarios",
    "createApplyTips": "Before creating the module, create the application",
    "cacheType": "Cache Types",
    "follower": "Focus People",
    "serverConfig": "Server Config",
    "serverGroup": "Server Group",
    "memorySize": "Memory Size（M）",
    "deployArea": "Deploy Area",
    "moduleId": "ID",
    "moduleInfo": "Cache Module Info",
    "serverInfo": "Cache Server Info",
    "mainServer": "Master",
    "backServer": "Slave",
    "mirror": "Mirror",
    "shmKey": "Shared Memory Key",
    "shmKeyRule": "Empty will be automatically allocated",
    "MultiKeyConfig": "Muti Key Config",
    "hasExist": "Module Exists",
    "dbAccessInfo": "DbAccess Info",
    "namingError": "Module name must not be started with Application name, only digits and letters allowed",
    "shmKeyError": "Same share memory keys are not allowed under same IP",
    "dbAccessIp": "DbAccess Ip",
    "dbMethod": "Please choose DbAccess Mysql Instance"
  },
  "MKCache": {
    "mainKey": "Main key(mkey)",
    "unionKey": "Union Key(ukey)",
    "dataValue": "Data Value(value)",
    "fieldName": "Field Name",
    "dataType": "Field Type",
    "fieldProperty": "require/optional",
    "defaultValue": "Default Value",
    "maxLen": "Max Length(bytes)",
    "error": "At less keep one item"
  },
  "cache": {
    "title": "cache",
    "cachePersistent": "Cache + persistence",
    "cacheType": "Cache Type",
    "persistentNumber": "The total number of persistent entries",
    "dbDataCountUnit": "Article ten thousand the data",
    "cacheTypeTip1": "Memory database (not obsolete)",
    "cacheTypeTip2": "Temporary cache (expired)",
    "cacheTypeTip3": "Hot spot cache (expand elimination)",
        "installFull": "Overwrite Install",
        "installlFullInfo": "The size of shared memory should be the same as before, or clear the previous shared memory",
        "installDbAccess": "Install DbAccess Server",
        "installDbAccessInfo": "After installing dbaccess, pay attention to modify the corresponding cache configuration, enable dbaccess and associate it with the current dbaccess service",
        "installBackup": "Install Backup Cache",
        "installMirror": "Install Mirror Cache",
    "perRecordAvg": "Average bytes of data records",
    "perRecordAvgUnit": "Byte",
    "totalRecord": "Save in the Cache",
    "maxReadFlow": "Estimate peak read flow",
    "maxWriteFlow": "Estimate peak write flow",
    "flowUnit": "Times/SEC.",
    "moduleRemark": "Function of note",
    "mainEngine": "main engine",
    "standByEngine": "stand by engine",
    "mirror": "mirror",
    "add": "add",
    "modification": "modification",
    "accessDbName": "DbAccess Mysql Instance",
    "chooseAccessDb": "Choose DbAccess Mysql Instance",
    "inputAccessDb": "Input DbAccess Mysql Instance",
    "dbaccessIp": "Must choose one DbAccess server ip",
    "config": {
      "tableTitle": "cache configuration list",
      "addSuccess": "add configuration success",
      "addConfig": "add configuration",
      "deleteConfig": "delete configuration",
      "editConfig": "edit configuration",
      "remark": "remark",
      "path": "path",
      "item": "item",
      "itemValue": "item value",
      "reload": "reload",
      "period": "period",
      "configuration": "Configuration",
      "noModuleExist": "can't find this module",
      "value": "value",
      "config_value": "original value",
      "modify_value": "Modify Values",
      "edit": "edit",
      "view": "view",
      "add": "add",
      "allSelected": "All",
      "batchUpdate": "Update",
      "batchDelete": "Delete",
      "addModuleConfig": "add module config"
    }
  },
  "dcache": {
    "expand": "expand",
    "Shrinkage": "Shrinkage",
    "Migration": "Migration",
    "serverMigration": "The deployment of the migration",
    "nonServerMigration": "Non-deployed migration",
    "batchPublish": "batch publish",
    "migrationMethod": "migration method",
    "migrationMethod1": "Complete data migration",
    "migrationMethod2": "No data migration",
    "switch": "Main/backup",
    "mirrorSwitch": "Mirror Main/backup switch",
    "mirrorOffSwitch": "Mirror switch",
    "readFail": "Backup unreadable",
    "switching": "switching",
    "switchSuccess": "switch success",
    "notSwitch": "not switch",
    "switchFailure": "switch failure",
    "rw": "read-write",
    "ro": "read-only",
    "imageUnavailable": "mirror unavailable",
    "auto": "auto switch",
    "manual": "manual switch",
    "omig": "migration",
    "oreset": "reset",
    "oswitch": "Main/backup",
    "amig": "a key migration",
    "areset": "mirroring",
    "mirrorEmpty": "Mirror idc is empty, do not restore the mirror state.",
    "noTheSamePatchVersion": "There are different versions of the service and no operation is allowed",
    "hasExpandOperation": "This module already has tasks in the migration operation, no more capacity is allowed, please go to operation management stop operation and expand capacity",
    "hasShrinkageOperation": "This module already has the task in the migration operation, does not allow any more volume reduction, please go to the operation management stop operation again volume reduction",
    "hasMigrationOperation": "This module already has the task in the migration operation, does not allow the migration, please go to the operation management to stop the operation and then reduce the volume",
    "leaveOneServiceGroup": "Leave at least one service group",
    "onlyOneServiceGroup": "There is only one service group and non-deployed migrations are not allowed",
    "oneGroup": "Migration services, only one group can be selected",
    "offline": "off line",
    "cantOffline": "There is active service in selected services, please stop before offline",
    "hasRouterPageNo": "In the offline service, there are routing pages. Please be careful. ",
    "hostOfflineAllServers": "In the selected service, there is a host, and all services of this module will be offline",
    "offlineAllBackupServers": "In the selected service, there is standby machine, and all standby machine services of this module will be offline",
    "offlineMirrorServers": "The selected service has mirroring. Log off all the mirroring services of this module",
    "offlineBackupMirrorServers": "The selected service has backup and mirroring to offline all backup and mirroring",
    "sureOffline": "determine the offline",
    "moduleExists": "The module already exists. Are you sure to cover it?",
      "applyExists": "The dcache already exists. Are you sure to cover it?",
    "operationManage": {
      "expand": "expand manage",
      "shrinkage": "shrinkage manage",
      "migration": "migration manage",
      "mainBackup": "switch manage",
      "appName": "application name",
      "moduleName": "module name",
      "srcGroupName": "srcGroupName",
      "dstGroupName": "distGroupName",
      "status": "status",
      "beginTime": "begin time",
      "progress": "progress",
      "routerPageNo": "routerPageNo",
      "statusText": {
        "0": "New migration tasks",
        "1": "Configuration phase complete",
        "2": "Release to complete",
        "3": "On the move",
        "4": "Complete",
        "5": "Stop"
      },
      "ensureDelete": "Are you sure to delete it?",
      "ensureStop": "Are you sure to stop it?",
      "ensureRestart": "Are you sure to restart task?",
      "ensureShrinkage": "Are you sure to shrinkage it?",
      "hasShrinkage": "Volume reduction has been initiated. Please go to operation management to check the progress of volume reduction",
      "hasExpand": "Expansion has been initiated. Please go to operation management to check the expansion progress",
      "hasServerMigration": "Deployment migration has been initiated, please go to operation management to see the progress of deployment migration",
      "hasnonServerMigration": "A non-deployed migration has been initiated. Go to action management to see the progress of the deployment migration",
      "onceSwitch": "Only one set of switches is allowed at a time",
      "ensureSwitch": "Are you sure to switch？",
      "switchSuccess": "switch success",
      "groupName": "group name",
      "masterServer": "master server",
      "slaveServer": "slave server",
      "switchTime": "start time",
      "modifyTime": "update time",
      "dbFlag": "DB Flag",
      "allowedOut": "allowed out",
      "switchType": "switch type",
      "switchResult": "switch result",
      "groupStatus": "group status",
      "switchMethod": "switch method"
    },
    "batch": {
      "restart": "batch restart",
      "stop": "batch stop"
    },
    "execute": "in execution...",
    "executeSuccess": "execution is completed "
  },
  "service": {
    "serverName": "The service name",
    "serverIp": "Service IP",
    "templateFile": "The service template",
    "routerDbName": "Routing database",
    "routerDbNameTip": "Provide the available mysql instance and set a desired database name, router will automatically create the database and use it to store routing information for each module under the application.",
    "routerDbIp": "The database of IP",
    "routerDbPort": "Database port",
    "routerDbUser": "username",
    "routerDbPass": "password",
    "multipleIp": "Service IP(multiple IP USES ; Separated)",
    "isSerializated": "Data Serializate",
    "chooseRouterDb": "Choose Mysql instance",
    "inputRouterDb": "Input Mysql instance"
  },
  "region": {
    "title": "region",
    "idcArea": "IDC area",
    "setArea": "Allochthonous mirror region",
    "list": "Region list",
    "label": "Region label",
    "modify": "Modify the area",
    "add": "The new area",
    "regionTips": "For example: shenzhen",
    "labelTips": "For example: sz"
  },
  "common": {
    "reTry": "Please check database connection",
    "deploy": "You can not deploy server in tars framework node",
    "createPerson": "createPerson",
    "baseInfo": "baseInfo",
    "nextStep": "nextStep",
    "admin": "admin",
    "serial": "serial",
    "config": "configuration",
    "patch": "publish",
    "gracePatch": "grace publish",
    "graceInfo": "(TarsFramework >= v2.4.4, TarsGo >= v1.1.4)",
    "service": "service",
    "time": "Time",
    "name": "name",
    "true": "true",
    "false": "false",
    "yes": "yes",
    "no": "no",
    "template": "template",
    "type": "Type",
    "cancel": "cancel",
    "submit": "ok",
    "choose": "choose",
    "status": "status",
    "result": "result",
    "error": "Error!!!",
    "warning": "Warning!!!",
    "success": "Success!!!",
    "ip": "node",
    "systemError": "system error",
    "noPrivilage": "no privilage",
    "notEmpty": " is required",
    "mustUnique": "already exist",
    "needNumber": " must be numeric type",
    "needArray": " must be array type",
    "needObject": " must be object type",
    "needBoolean": " must be boolean type",
    "noLogin": "You have not been login",
    "nodata": "No Data",
    "noService": "No Services",
    "retry": "Click to try again",
    "enable": "enable",
    "disable": "disable",
    "alert": "Alert",
    "networkErr": "Network Error",
    "set": {
      "setName": "SET Name",
      "setArea": "SET Area",
      "setGroup": "SET Group"
    },
    "message": "Message"
  },
  "operate": {
    "update": "update",
    "undeploy": "undeploy",
    "restart": "restart",
    "stop": "stop",
    "add": "add",
    "manage": "management",
    "config": "config",
    "modify": "modify",
    "delete": "delete",
    "more": "more",
        "download": "Download",
    "operates": "Operates",
    "view": "view",
    "merge": "merge",
    "search": "search",
    "servant": "servant",
    "goback": "go back",
    "default": "default",
    "save": "save",
        "submit": "submit",
    "title": {
      "update": "Update",
      "add": "Add",
      "more": "More"
    },
    "retry": "retry"
  },
  "index": {
    "rightView": {
      "title": "choose a service",
      "tips": "if you want to check the service list or the Real-time service status ,<br>please choose a service on the left menu.",
      "tab": {
        "patch": "Publish",
        "serviceConfig": "Service Configuration",
        "setConfig": "SET Configuration",
        "appConfig": "APP Configuration",
        "statMonitor": "Status Monitor",
        "propertyMonitor": "Property Monitor",
        "privileage": "Privileage",
        "infDebuger": "Interface Debuger"
      }
    }
  },
  "nodeList": {
    "table": {
      "th": {
        "node_name": "NodeName",
        "last_heartbeat": "Last Heartbeat",
        "present_state": "Present State",
        "tars_version": "Version",
                "label": "label",
        "load_avg5": "Load",
        "check": "Operator"
      },
            "edit": "Edit",
      "check": "Check",
      "delete": "Delete"
    },
    "checkNode": "Check Node Connection",
    "deleteNode": "Delete Node",
    "confirmDeleteNode": "Confire delete node?<br>Please stop the node on the node machine and log off the service on the node."
  },
  "serverList": {
    "title": {
      "serverList": "Services",
      "serverStatus": "Real Time Service Status"
    },
    "table": {
      "th": {
        "group": "group",
        "service": "Service",
        "ip": "Node",
        "zb": "main",
        "enableSet": "SET",
        "configStatus": "Configuration Status",
        "currStatus": "Current Status",
        "processID": "Process ID",
        "version": "Version",
        "time": "Publish Time",
        "threadID": "Thread ID",
        "serviceID": "Service ID",
        "result": "Result"
      },
      "servant": {
        "title": "Servants",
        "adress": "endpoint",
        "nodeName": "node name",
        "thread": "threads count",
        "maxConnecttions": "Max connections",
        "maxQueue": "Max queue",
        "timeout": "Queue timeout(ms)"
      },
      "msg": {
        "fail": "Failed to load the service list and retry?"
      }
    },
    "dlg": {
      "isBackup": "is backup",
      "placeholder": {
        "english": "all lower-case",
        "num": "number or *",
        "thread": "Nodejs >=1,other >=3"
      },
      "serviceType": "service type",
      "asyncThread": "async threads",
      "defaultPath": "default path",
      "exePath": "exe path",
      "startScript": "start script",
      "stopScript": "stop script",
      "monitorScript": "monitor script",
      "privateTemplate": "private template",
      "errMsg": {
        "required": "All starred must be filled in",
        "setName": "Set name can only contain english lowercase letters",
        "setArea": "Set area can only contain english lowercase letters",
        "setGroup": "Set group must be a number or *",
        "defaultPath": "default path error,must be an absolute path",
        "exePath": "EXE path error,must be an absolute path",
        "startScript": "start script path error,must be an absolute path",
        "stopScript": "stop script path error,must be an absolute path",
        "monitorScript": "monitoring script path error,must be an absolute path",
        "updateSuccess": "Success! the service has been updated successfully",
        "updateFailed": "Failed! service update failed"
      },
      "msg": {
        "undeploy": "Are you sure to undeploy this service?",
        "undeployFailed": "undeploy failed"
      },
      "title": {
        "editService": "Edit Service",
        "undeploy": "undeploy",
        "taskStatus": "task status"
      }
    },
    "tips": {
      "treeid": "Please select a service from the left side of the business tree",
      "loadingError": "error",
      "paramsError": "params error",
      "systemError": "system error",
      "undeploy": "can`t undeploy running service"
    },
    "undeploy": {
      "failed": "undeploy failed",
      "success": "undeploy success"
    },
    "restart": {
      "notStart": "not start",
      "running": "running",
      "success": "success",
      "failed": "failed",
      "cancel": "cancel",
      "parial": "partial success",
      "restartFailed": "restart failed",
      "restartResult": "restart result"
    },
    "stopService": {
      "msg": {
        "stopService": "Are you sure to stop this service"
      }
    },
    "servant": {
      "obj": "OBJ name can only contains english letters",
      "thread": "threads must be numeric and greater than 0",
      "error": "Error!!!  address：To tcp or udp or ssl at the beginning, there-h-t-p three parameters, -p 0-65535, -t greater than 0, -h ip",
      "ip": "IP format is wrong, please re-fill.",
      "servantAddFailed": "Servant added failed",
      "servantUpdateFailed": "Servant updated failed",
      "a": "Are you sure to delete the Servant",
      "deployService": "deploy service",
      "upload": "upload",
      "appService": "app·service",
      "objName": "OBJ name",
      "c": "English letters, don't need to add in front of the app name and the service name",
      "numOfThread": "threads count",
      "BindingAddress": "Binding address",
      "sample": "sample",
      "maxConnecttions": "max connecttions",
      "lengthOfQueue": "max queue length",
      "queueTimeout": "queue timeout(ms)",
      "allowIP": "allow ip",
      "protocol": "protocol",
      "notTARS": "not TARS",
      "treatmentGroup": "treatment group",
      "releasePackage": "release package",
      "comment": "comment",
      "logLevel": "log level",
      "pushFile": "push config file",
      "sendCommand": "send customer cmd",
      "serviceLink": "view service Link",
      "taskID": "taskID",
      "statusCode": "error status code,status code"
    }
  },
  "pub": {
    "btn": {
      "pub": "publish node",
      "history": "history"
    },
    "dlg": {
      "patchType": "PatchType",
      "ip": "Node",
      "releaseVersion": "release version",
      "upload": "upload release package",
      "compileAndPublish": "compile and publish",
      "releasePkg": "release package",
      "defaultValue": "choose ...",
      "filetype": "only accept .tars files",
      "noConfFile": "no configuration files",
      "a": "please choose an ip",
      "ab": "please choose a release version",
      "unpublished": "Unpublished",
      "conf": "Configure compiler interface",
      "tag": "version interface",
      "compiler": "compiler interface",
      "task": "compilation progress interface",
      "compileProgress": "Compilation progress",
      "uploadPkg": "Uploading package, please wait",
      "hasModule": "We need to log off all the modules under this application to log off the unique router and proxy services",
      "cantUseApply": "Offline is the only node. After offline, the application will be useless"
    },
    "tips": {
      "default": "Release management management service level, please first in the left tree selection service business.",
      "tagListUrl": "Please configure SVN / GIT version acquisition interface first",
      "tag": "Please enter the interface address to get the version list"
    },
    "date": "Date"
  },
  "cfg": {
    "title": {
      "a": "Configuration",
      "b": "Reference files",
      "c": "Node configuration",
      "viewConf": "View configuration content",
      "viewMerged": "View merged configuration",
      "viewHistory": "View update history"
    },
    "btn": {
      "add": "add configuration",
      "addRef": "add reference file",
      "pushFile": "push file",
      "fileName": "fileName",
      "content": "content",
      "reason": "reason",
      "lastUpdate": "lastupdate time",
      "mod": "the modification"
    },
    "table": {
      "modCfg": "edit",
      "delCfg": "delete",
      "delRef": "delete",
      "serviceName": "service name",
      "viewMerge": "view",
      "viewIpContent": "nodeConf",
      "mangeRefFile": "manage reference file"
    },
    "msg": {
      "chooseCfg": "please choose service configuration first",
      "refFile": "reference file",
      "addError": "add file error",
      "delError": "delete error",
      "confirm": "Are you sure to delete this file",
      "viewContent": "view content",
      "confirmCfg": "Are you sure to delete this configuration",
      "nofile": "no file",
      "selectNode": "Please select at least one node",
      "empty": "Empty"
    },
    "dlg": {
      "fileName": "fileName is required",
      "fileNameReg": "The file name can contain only letters or Numbers, point, underscores, dash",
      "contentReg": "content is required",
      "addSucccess": "add success",
      "exists": "File with the same name already exists!"
    }
  },
  "monitor": {
    "search": {
      "a": "show date",
      "b": "compare date",
      "start": "start time",
      "end": "end time",
      "master": "master name",
      "slave": "slave name",
      "interfaceName": "interface name",
      "masterIP": "master IP",
      "slaveIP": "slave IP"
    },
    "btn": {
      "submit": "get monitoring charts"
    },
    "msg": {
      "info": "system is set up for the first time, contrast, countless according to please compare the date to date"
    },
    "table": {
      "total": "total flow",
      "curr": "the same day",
      "contrast": "contrast day",
      "fluctuating": "swings",
      "average": "average response time in Day1",
      "abnormal": "ratio of exceptional request in Day1",
      "abnormalC": "ratio of exceptional request in Day2",
      "timeout": "ratio of out-of-time request in Day1",
      "timeoutC": "ratio of out-of-time request in Day2",
      "errTips": "Service monitoring need specific to the service, please select a service in the left tree first.",
      "a": "average time",
      "b": "abnormal rate",
      "c": "timeout rate",
      "d": "Monitor time"
    },
    "select": {
      "all": "all",
      "property": "property",
      "strategy": "policy"
    },
    "property": {
      "property": "characteristic value of curr day",
      "propertyC": "characteristic value of contrast day"
    }
  },
  "deployService": {
    "title": {
      "deploy": "Deploy service",
      "expand": "Expand service",
      "template": "Manage template",
      "apply": "Apply for deployment",
      "nodes": "Node service",
      "check": "Check Framework",
      "gateway": "Gateway Config",
      "application": "Manage application",
      "business": "Manage business",
      "businessRelation": "Business Relation"
    },
    "form": {
      "app": "APP",
      "appAdd": "Input New App",
      "tips": "No need to add applications and services, such as MTT.HttpProxyServer.HttpProxyObj, where only fill HttpProxyObj",
      "serviceType": "Service type",
      "serviceName": "Service name",
      "template": "Template",
      "node_name": "Node",
      "set": "Set grouping",
      "obj": "OBJ binds IP",
      "port": "port",
      "portType": "PortType",
      "placeholder": "Only supports English letters",
      "portTips": "port range 0 ~ 65535, your input is beyond the scope",
      "appTips": "application name cannot be empty",
      "serviceTips": "the service name cannot be empty",
      "serviceTypeTips": "the service type cannot be empty",
      "templateTips": "the template cannot be empty",
      "serviceFormatTips": "The service name can only contain letters, Numbers, and begin with a letter",
      "nodeTips": "the node cannot be empty",
      "nodeFormatTips": "Node format is not correct, please enter the IP address",
      "setNameTips": "the Set name cannot be empty",
      "setAreaTips": "the Set area cannot be empty",
      "setNameFormatTips": "The Set name can only English lowercase letters",
      "setAreaFormatTips": "The Set area can only English lowercase letters",
      "setGroupTips": "Set group name cannot be empty",
      "setGroupFormatTips": "Set group name can only numbers or *",
      "inputTips": "all * must be filled",
      "objTips": "OBJ name cannot be empty",
      "deployServiceTip": "Are you sure to deploy this service?",
      "getPort": "get port",
      "ret": {
        "success": "Deployed application submitted successfully",
        "failed": "Deployed application submission failed!Please contact your administrator"
      },
      "nameTips": "This service is existing in the system, please change the application name, service name or nodes and retry"
    },
    "table": {
      "th": {
        "endpoint": "OBJ Endpoint",
        "port": "Port",
        "protocol": "Protocol",
        "threads": "Threads"
      },
      "tips": {
        "ip": "OBJ Endpoint cannot be empty",
        "ipFormat": "IP format error",
        "empty": "cannot be empty"
      }
    }
  },
  "nodes": {
    "node_name": "Node(Input IP)",
    "nodeNameTips": "Node cannot be empty",
    "port": "SSH PORT",
    "portTips": "SSH Port cannot be empty",
    "user": "User",
    "password": "Password",
    "runuser": "Run User",
    "runuserTips": "Run User cannot be empty",
    "btn": {
      "manualAddNode": "Manual Install node",
      "autoAddNode": "Auto Install node",
            "autoUpdateNode": "Batch Upgrate node",
            "check": "Click to check framework"
    },
    "manualAddNode": {
      "title": "Step",
      "info1": "Note 1: ${webhost} is address of web platform, ${localip} is ip of node machine",
      "info2": "Note 2: On the web platform, only the framework corresponds to the installation package of the compilation platform. Other OS installation packages need to be compiled manually by yourselves",
      "OS1" : {
        "title" : "Linux/Mac",
        "step1": "In node machine: wget http://${webhost}/get_tarsnode?ip=${localip} -O install_tarsnode.sh",
        "step2": "Run: mkdir -p /usr/local/app/tars/tarsnode",
        "step3": "Run: sh install_tarsnode.sh",
        "step4": "In crontab, add: * * * * * /usr/local/app/tars/tarsnode/util/monitor.sh",
        "step5": "Finish, install directory: /usr/local/app/tars/" 
      },
      "OS2": {
        "title": "Windows",
        "step1": "In node machine open: http://${webhost}/get_tarsnode?ip=${localip}",
        "step2": "Save output to: install_tarsnode.sh",
        "step3": "Download busybox: http://${webhost}/files/busybox.exe",
        "step4": "In window console, run: busybox.exe install_tarsnode.sh",
        "step5": "In windows scheduled tasks add: c:\\tars-install\\tars\\tarsnode\\util\\monitor.bat",
        "step6": "Finish, install directory: c:\\tars-install\\tars"
      }
    },
    "add": {
      "nodeNameTips": "node name cannot be empty",
      "title": "Install Node(Windows not support)"
        },
        "label": {
            "title": "Edit Label",
            "name": "Label Name",
            "value": "Label Value",
            "operator": "Operator",
            "delete": "Delete"
    }
  },
  "connectNodeList": {
    "title": "Connect And Install",
    "btnInstall": "Install",
    "btnConnect": "Test Connect",
    "btnInstalling": "Installing",
    "btnInstalled": "Installed, Install Again",
    "btnClose": "Close",
    "execute": "Running, please wait",
    "executeConnect": "Execute connecting test, please wait",
    "executeInstall": "Execute installing, please wait",
    "installTgzNotExists": "Tarnode install file not exits, check file: /usr/local/app/web/files/tarsnode.tgz",
    "step1":"check package",
    "step2":"ssh link",
    "step3":"download package",
    "step4":"check params",
    "step5":"install node",
    "table": {
      "th": {
        "node_name": "Node",
        "connect": "Connection",
        "exists": "Overwrite",
        "install": "Intall Status"
      }
    },
    "connect": {
      "succ": "Connected",
      "failed": "SSH Connect Failed"
    },
    "exists": {
      "yes": "TarsNode exists",
      "no": "TarsNode not exists"
    },
    "install": {
      "connect": "Connecting",
      "waitNew": "New Install",
      "waitOverwrite": "Overwrite Install",
      "invalid": "Can not Install",
      "installing": "Installing"
    }
  }, 
  "checkTable": {
    "table": {
      "th": {
        "server_name": "Server Name",
        "node_name": "Node Name",
        "obj_name": "Obj Name",
        "status": "Check Status"
      }
    },
    "restartAdminRegistry": "Please check tarsAdminRegsitry is work fine or restart tars framework!",
    "adminRegistryFailed": "Call tarsAdminRegistry failed!",
    "failed": "Please check server is start successfully",
    "problem": "Problem?",
    "problemDialog": {
      "title": "Problem",
      "info": "In case of service exception, you can log in to the corresponding server and execute the following relevant commands as required",
      "restartFramework": "restart framework: /usr/local/app/tars/tars-start.sh",
      "stopFramework": "stop framework: /usr/local/app/tars/tars-stop.sh",
      "restartServer": "restart tars server: /usr/local/app/tars/tarsxxxx/util/start.sh"
    }
  },
  "template": {
    "search": {
      "parentTemplate": "Parent template"
    },
    "btn": {
      "addTempate": "add tempate"
    },
    "form": {
      "content": "content"
    },
    "view": {
      "title": "View template"
    },
    "add": {
      "templateNameTips": "The template name cannot be empty",
      "templateFormatTips": "The template name can only contain letters, Numbers, and begin with a letter",
      "parentTemplate": "Please select the parent template",
      "title": "Add template"
    },
    "update": {
      "title": "Update tempate",
      "errTips": "update failed"
    },
    "delete": {
      "confirmTips": "Are you sure to delete this template",
      "title": "Delete template"
    }
  },
  "gateway":{
    "station":"Station Config",
    "upstream":"Upstream Config",
    "globalblack":"Global Black List",
    "stationId":"Station ID",
    "stationName":"Station Name",
    "monitorUrl":"Monitor Url",
    "serverName":"Server Name",
    "pathRule":"Path Rule",
    "proxyPass":"ProxyPass",
    "addr":"Addr",
    "weight":"Weight",
    "fusing":"Fusing",
    "fusingOn":"FusingOn",
    "fusingOff":"FusingOff",
    "lastUpdate":"Update Time",
    "gatewayObj":"GatewayFlowControlObj",
    "switchGateway":"Switch Gateway",
    "btn":{
      "addGateway": "Add Gateway",
      "addUpstream": "Add Upstream",
      "addHttpRouter": "Add Router"
    },
    "add": {
      "stationNameTips": "please input station name",
      "idFormatTips": "station id can only contain letters, numbers, dots, underscores, start with a letter, and cannot end with Obj",
      "monitorUrlTips": "please input monitor tips",
      "upstreamFormatTips":"upstream can only contain letters, numbers, underscores, start with a letter, and cannot end with Obj",
      "addrFormatTips":"please input ip:port",
      "weightFormatTips":"please input weight",
      "serverNameTip":"support wildcards or regular expressions. if empty, matchs all",
      "pathRuleTip":"please input path rule",
      "proxyPassTip":"please input ProxyPass，support ip:port, upstream, tars obj",
      "title": "add station",
      "upstream": "add upstream"
    },
    "update": {
      "title": "edit station",
      "routerTitle": "edit router",
      "upstream": "edit upstream",
      "errTips": "edit fail"
    },
    "delete": {
      "confirmTips": "are you sure to delete this station?",
      "upstreamConfirmTips": "are you sure to delete this upstream?",
      "bwListConfirmTips": "are you sure to delete this black/whitelist?",
      "deleteUpstreamErrorTip":"detete fail，there are still associated routers, or upstream is not exsit",
      "title": "Delete Station"
    },
    "config":{
      "title":"Gateway Config"
    },
    "bwlist":{
      "title":{
        "black":"Blacklist",
        "white":"Whitelist"
      },
      "ipTip":"please input ip（support wildcards）"
    },
    "flowControl":{
      "title":"flow control",
      "duration":"time window(s)",
      "durationTip":"please input seconds of time window",
      "maxFlow":"max flow",
      "maxFlowTip":"please input max flow in time window",
      "tip":"that is, during the 'time window', when reached 'max flow', the excess flow will be rejected"
    },
    "router":{
      "title":"Router Config"
    }
  },
  "serviceExpand": {
    "title": "service expand",
    "form": {
      "tarIP": "Target IP",
      "placeholder": "Multiple IP separated by comma (,), semicolon (;) newline (\\ n)",
      "nodeConfig": "Node configuration",
      "copyNodeConfig": "copy node configuration",
      "preExpand": "Pre expand",
      "noExpand": "no expand",
      "disableSet": "disable Set",
      "errTips": {
        "tarIP": "tarIP can not be empty",
        "preExpand": "expansion failed! Please contact the administrator",
        "noneNodes": "Please check the object to be expanded",
        "nodeCheck": "Please check the nodes",
        "ipFormat": "Please fill in the correct IP address",
        "success": "Expansion success"
      }
    },
    "exists": "node has exists, no need expand, please check input",
    "newGroup": "Add a group",
    "removeGroup": "Remove last group"
  },
  "managePackage": {
    "title": "Manage Publish Package",
    "table": {
      "th": {
        "c1": "id",
        "c2": "Server Name",
        "c3": "Upload Time",
        "c4": "Update Text",
        "c5": "Publish Time",
        "c6": "Operator"
      }
    }
  },
  "historyList": {
    "title": "Release History",
    "delete": "Confirm to delete release history?",
    "table": {
      "th": {
        "c2": "serial",
        "c4": "details of the subtasks"
      }
    },
    "dlg": {
      "th": {
        "c1": "ID",
        "c2": "Application",
        "c3": "Service",
        "c4": "Node",
        "c5": "Command",
        "c7": "Execute info",
        "c8": "Status"
      }
    }
  },
  "user": {
    "op": "Operation",
    "dev": "Developer",
    "tips": {
      "sep": "Multiple people separated by semicolon"
    }
  },
  "resource": {
    "installRstMsg": ",The results of installment of Tarsnode are as follows:",
    "installResult": "Install result"
  },
  "inf": {
    "list": {
      "debug": "debug",
      "benchmark":"benchmark"
    },
    "error":{
      "parseFail":"proto parse fail",
      "caseToolNotExists": "protocol parse tool not exists! please copy to web/"
    },
    "title": {
      "listTitle": "Tars Files",
      "dlgTitle": "Upload Tars File"
    },
    "dlg": {
      "selectLabel": "modules/interfaces/functions",
      "inParam": "in params",
      "outParam": "out params",
      "tarsFile": "tars file",
      "deleteMsg": "are you sure to delete this file?",
      "objName": "Servant Name"
    },
    "benchmark":{
      "inParam": "in params struct",
      "outParam": "out params struct",
      "fnlist":"Function List",
      "nofn":"no function record",
      "interface":"interface",
      "fnname":"function name",
      "returnType":"return type",
      "case":"case",
      "addCase":"add case",
      "caselist":"case list",
      "nocase":"no case record",
      "des":"description",
      "inputValue":"input value",
      "modifyCase":"modify",
      "testCase":"test",
      "runCase":"run",
      "viewResult":"view result",
      "deleteCase":"delete",
      "inputValueDes":"input value generation description",
      "bmParams":"benchmark params",
      "endpoints":"endpoints",
      "endpointsTip":"other(eg：tcp -h 192.168.10.4 -t 60000 -p 3031，separate by newline)",
      "infTest":"run test",
      "cancelTest":"cancel",
      "links":"links in one endpoint",
      "speed":"speed in one endpoint",
      "duration":"duration(s)",
      "testResult":"benchmark result",
      "startBenchmark":"start",
      "stopBenchmark":"stop",
      "refresh":"refresh",
      "detail":"detail",
      "stat":"stat charts",
      "retStat":"return stat",
      "costStat":"cost time stat",
      "time":"time",
      "total":"total",
      "success":"success",
      "fail":"fail",
      "successRate":"success rate",
      "maxCost":"max cost(ms)",
      "minCost":"min cost(ms)",
      "avgCost":"avg cost(ms)",
      "sendBytes":"send bytes",
      "recvBytes":"recv bytes",
      "deleteCaseConfirm":"are you sure to delete this case?",
      "installTip":"please install benchmark server before you use benchmark tool",
      "installTutorial":"install tutorial",
      "installScript":"install script"
    }
  },
  "publishLog": {
    "title": "Publish Log",
    "sync": "synchronizing PMS...",
    "releaseId": "Release ID",
    "releaseProgress": "Publishing progress（%）",
    "publishInfo": "Publishing, please wait..."
  },
  "application": {
    "btn": {
      "add": "add application"
    },
    "form": {
      "application": "application",
      "person": "person",
      "time": "time",
      "content": "content"
    },
    "view": {
      "title": "View application"
    },
    "add": {
      "nameTips": "The application name cannot be empty",
      "formatTips": "The application name can only contain letters, Numbers, and begin with a letter",
      "parent": "Please select the parent application",
      "title": "Add application"
    },
    "update": {
      "title": "Update application",
      "errTips": "update failed"
    },
    "delete": {
      "confirmTips": "Are you sure to delete this application",
      "title": "Delete application"
    }
  },
  "business": {
    "btn": {
      "add": "add business"
    },
    "form": {
      "business": "business",
      "showName": "show name",
      "order": "order",
      "person": "person",
      "time": "time",
      "content": "content"
    },
    "view": {
      "title": "View business"
    },
    "add": {
      "nameTips": "The business name cannot be empty",
      "formatTips": "The business name can only contain letters, Numbers, and begin with a letter",
      "parent": "Please select the parent business",
      "title": "Add business"
    },
    "update": {
      "title": "Update business",
      "errTips": "update failed"
    },
    "delete": {
      "confirmTips": "Are you sure to delete this business",
      "title": "Delete business"
    }
  },
  "businessRelation": {
    "btn": {
      "add": "add business relation"
    },
    "view": {
      "title": "View business relation"
    },
    "form": {
      "person": "person",
      "time": "time"
    },
    "add": {
      "nameTips": "The business name cannot be empty",
      "formatTips": "The business name can only contain letters, Numbers, and begin with a letter",
      "title": "Add business relation"
    },
    "update": {
      "title": "Update business relation",
      "errTips": "update failed"
    },
    "delete": {
      "confirmTips": "Are you sure to delete this business relation",
      "title": "Delete business relation"
    }
  },
  "ssoHeader": {
    "tab": {
      "tab1": "My Privilege List",
      "tab2": "Manage User",
      "tab3": "Manage Privilege",
      "tab4": "Token Manage",
      "tab5": "Setting"
    },
    "modifyPass": "Modify Password"
  },
  "login": {
    "loginTitle": "Please Sign In",
    "userName": "User name",
    "password": "Password",
    "captcha": "Captcha",
    "repeatPassword": "Repeat password",
    "login": "Sign in",
    "toRegisterPage": "Create an account",
    "toLoginPage": "Sign in",
    "userNameTips": "User name is required",
    "userNameRegTips": "The user name can contain only letters or Numbers, underscores",
    "passwordTips": "Password is required",
    "passwordNoCorrect": "Incorrect password",
    "captchaTips": "Captcha is required",
    "userNoExist": "User name does not exist",
    "loginFailed": "Sign in failed",
    "registerTitle": "Please Sign Up",
    "repeatPasswordTips": "Repeat password is required",
    "register": "Sign up",
    "passwordDiff": "Two different input password, please re-entry",
    "hasExist": "User name already exists",
    "registerSucc": "Sign up successfully",
    "registerFailed": "Sign up failed",
    "getUidFailed": "Get user name failed",
    "logout": "Sign out",
    "noLogin": "You have not been sign in"
  },
  "auth": {
    "flag": "Flag(Application or Application.ServerName)",
    "role": "Role",
    "uid": "Uid",
    "flagTips": "Flag is required",
    "roleTips": "Role is required",
    "uidTips": "Uid is required",
    "uidPlaceholder": "if multiple uid, with a semicolon (;) space",
    "addPrivilege": "Add Privilege",
    "delPrivilege": "Revoke Privilege",
    "privilegeManageTitle": "Privilege Manage",
    "loadListError": "Load privilege list failed",
    "selectRecord": "Please select at least one record",
    "confirmDelete": "Are you sure to delete this record?",
    "loadUserIdError": "Load user list failed",
    "delSucc": "Delete successfully",
    "delError": "Delete error",
    "adminNotErase": "Admin user privilege can not be delete",
    "addUser": "Add User",
    "delUser": "Delete User",
    "userManageTitle": "User List",
    "userTime": "Create Time",
    "adminDelError": "admin Can not be deleted",
    "token": "TOKEN",
    "addToken": "Add Token",
    "delToken": "Delete Token",
    "tokenManageTitle": "Token List",
    "tokenExpireTime": "Token Expire Time",
    "tokenTime": "Token Create Time",
    "loadTokenError": "Load Token failed",
    "confirmTokenDelete": "Confirm to delete the token?",
    "confirmTokenTitle": "Delete Token",
    "status": "Status",
    "operator": "Operator",
    "tokenValid": "valid",
    "valid": "Enable",
    "notValid": "Disable",
    "setTokenValid": "Confirmm to Modify Token Status?",
    "setTokenError": "Set Token Status Failed",
    "setTokenSucc": "Modify Token Status Success",
    "editSet": "Update Setting",
    "setManageTitle": "Setting List",
    "setTitle": "Setting Title",
    "setInfo": "Setting Info",
    "loadSetError": "Load Setting failed",
    "setSetValid": "Confirmm to Modify Setting Status?",
    "setSetError": "Set Setting Status Failed",
    "setSetSucc": "Modify Setting Status Success",
    "about": "Setting description"
  },
  "pass": {
    "title": "Modify Password",
    "adminTitle": "First Login -- Set [admin] Password",
    "userName": "Uid",
    "password": "Password",
    "repeatPassword": "Repeat password",
    "modify": "Modify",
    "passwordDiff": "Two different input password, please re-entry",
    "modifySucc": "Modify Succ",
    "modifyFailed": "Modify Failed",
    "passwordTips": "Password is required",
    "repeatPasswordTips": "Repeat password is required",
    "setAdminPasswordFailed": "Can not set admin user password",
    "toIndexPage": "Goto My Index Page"
  },
  "ssoCommon": {
    "search": "search",
    "nextPage": "next",
    "prevPage": "back",
    "nodata": "no data",
    "admin": "admin user has all privileges",
    "success": " successfully",
    "failed": " failed",
    "confirmTitle": "System Confirm",
    "systemError": "system error",
    "noPrivilage": "no privilage",
    "notEmpty": " is required",
    "needNumber": " must be numeric type",
    "needArray": " must be array type",
    "needObject": " must be object type",
    "needBoolean": " must be boolean type"
  },
  "ldap": {
    "alert": "After LDAP is enabled, except for admin user, other users can login through LDAP. You can use LDAP to connect with other authority authentication systems in the company!",
    "info": "Open LDAP",
    "url": "ldap url",
    "basedn": "ldap basedn"
  },
  "localeSelect": {
    "cn": "Chinese",
    "en": "English"
  }
}
